// config.js

import path from 'path';
import { fileURLToPath } from 'url';

// --- ES Module 环境下的 __dirname ---
// 获取当前文件的完整路径
const __filename = fileURLToPath(import.meta.url);
// 获取当前文件所在目录的路径
const __dirname = path.dirname(__filename);

/**
 * @description 应用程序的核心配置对象
 */
const CONFIG = {
    // 任务定义: 描述AI代理的核心任务，这个描述会贯穿始终，影响AI在排名、总结等环节的决策
    taskDescription: '为中国大陆的读者提供一份关于国家重要新闻的每日简报。',
    // 起始URL: AI代理将从这个网址开始抓取新闻
    startUrl: 'https://www.news.cn/',

    // 调试与输出
    debugMode: false, // 设为true时，控制台会打印详细的LLM请求和响应日志，方便调试
    outputBaseDir: path.join(__dirname, 'output'), // 所有输出文件（报告、日志等）的基础目录

    // 网络相关配置
    network: {
        // 请求头: 模拟浏览器访问，防止被网站屏蔽
        headers: {
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/126.0.0.0 Safari/537.36',
        },
        // 页面抓取超时时间 (毫秒)
        fetchTimeout: 20000,
    },

    // 爬取与链接筛选配置
    crawling: {
        maxDepth: 2, // 爬虫探索的最大深度，从startUrl开始为1
        maxCategoriesToExplore: 8, // 在每一层深度，最多选择N个最重要的“栏目”进行深入探索
        // --- 栏目排名配置 ---
        categoryRankingRounds: 3, // 为确保公平性，对栏目进行多少轮瑞士制排名
        categoryRankingGroupSize: 5, // 对栏目进行重要性排名时，每组比较的栏目数量
        categoryRankingPoints: [4, 3, 2, 1, 0], // LLM对栏目排名后，根据名次赋予的分数
        // (已修正) 无用标题关键词: 包含这些词的链接标题会被直接忽略，以过滤掉“关于我们”、“联系我们”等非新闻链接
        uselessTitleKeywords: ['关于我们', '联系我们', '隐私政策', '登录', '注册', '下载', '更多', '广告', '订阅'],
        llmRetries: 3,       //  为栏目排名添加重试次数
        retryDelay: 1000,    //  为栏目排名添加重试延迟(ms)
    },

    // --- (已重构) 锦标赛排名系统配置 ---
    // 优化点：将资格赛和决赛圈的配置完全独立和内聚，便于管理。
    ranking: {
        // --- 资格赛配置 ---
        qualification: {
            rounds: 3,                  // (已按要求修改) 进行多少轮资格赛
            groupSize: 10,                // (已按要求修改) 资格赛中，每组比较的文章数量
            points: [9, 8, 7, 6, 5, 4, 3, 2, 1, 0], // (已按要求修改) 根据12篇文章排名赋予的分数
            concurrency: 10,              // 资格赛期间，同时向LLM发送请求的并发数
            llmRetries: 6,                // 为文章资格赛添加重试次数
            retryDelay: 1000,             // 为文章资格赛添加重试延迟(ms)
        },

        // --- (新) 聚类配置 ---
        groupingBatchSize: 20, // (新) 在文章聚类的第一阶段，每批次送入LLM进行相似对判断的文章数量
        groupingMaxRetries: 6, // **(新增)** 聚类时调用LLM的最大重试次数
        groupingRetryDelay: 2000, // **(新增)** 聚类时每次重试的基础延迟时间 (毫秒)


        // --- 决赛圈配置 ---
        contendersToRank: 80, // 从资格赛中选出排名前N的文章进入决赛圈
        tournament: {
            rounds: 5,                  // 进行多少轮决赛圈排名
            groupSize: 3,                 // 决赛圈中，每组比较的文章数量（瑞士制，分数相近的在一起比较）
            points: [3, 1, 0],            // 决赛圈排名后，根据名次赋予的分数
            concurrency: 8,               // 决赛圈期间，同时向LLM发送请求的并发数
            llmRetries: 3,                // 为文章决赛圈添加重试次数
            retryDelay: 1000,             // 为文章决赛圈添加重试延迟(ms)
        }
    },

    // 文章处理配置
    processing: {
        maxArticlesToProcess: 15, // 决赛圈结束后，最终选出N篇文章进行深度总结和处理
        minContentLength: 60, // 从网页提取正文时，如果内容字数少于此值，则认为提取失败
        maxOverallRetries: 5, // 对单篇文章或议题进行深度处理时，最大允许的重试次数
        // 新颖度加分策略: 对近期发布的文章给予额外加分
        recencyBonus: {
            maxBonus: 20, // 最高可获得的新颖度加分
            maxDays: 7, // 只对最近N天内的文章进行加分
        }
    },

    // 大语言模型 (LLM) 相关配置
    llm: {
        studioUrl: 'http://localhost:1234/v1/chat/completions', // 指向你的本地LLM服务地址（需兼容OpenAI API格式）
        maxRetries: 1, // 单次LLM API调用失败后的最大重试次数
        retryDelay: 1000, // 每次重试前的基础延迟时间 (毫秒)
        requestTimeout: 120000, // 普通LLM请求的超时时间 (毫秒, 2分钟)
        longRequestTimeout: 300000, // 长请求（如深度总结）的超时时间 (毫秒, 5分钟)
        maxTokens: 8192, // LLM生成的最大token数 (注意：过大的值可能不被所有模型支持)
    },

    // 输出格式化配置
    output: {
        // 为不同分类配置Emoji图标，用于美化最终的Markdown报告
        categoryEmojis: { '国际': '🌍', '国内': '🇨🇳', '财经': '💼', '科技': '🔬', '社会': '👥', '观点': '✍️', '其他': '📰', '默认': '📰' }
    },

    // Prompt 模板中心: 集中管理所有与LLM交互的Prompt
    prompts: {
        // 用于资格赛，对文章标题进行重要性排序
        qualifyLinks: (linkTitles, taskDescription) => ({
            system: '你是一位反应迅速、判断精准的新闻编辑，任务是快速判断在一组新闻标题中，哪些对目标读者最重要。你的视角不要过于宏大，像可能不是很重要的国家领导人或者其他宣传类新闻，排序应该靠后。你的回应必须极端简洁，严格遵循格式。内容使用简体中文。',
            user: `**任务目标**: “${taskDescription}”\n\n**待评估的标题列表**:\n${linkTitles.map((title, i) => `${i + 1}. ${title}`).join('\n')}\n\n**你的指令**:\n根据任务目标，对列表中的标题进行重要性排序。你的回应【只能】是标题的【编号】，从最重要到最不重要排列，并用英文逗号 (,) 分隔。不要包含任何理由、解释或多余的文字。\n\n**格式示例**: 3,1,2,5,4,0,6,7,9,8\n\n**你的回应**:`,
        }),

        // 用于对抓取到的“栏目”链接进行重要性排序
        rankCategories: (categoryTitleAndLinks, taskDescription) => ({
            system: '你是一位经验丰富的新闻网站总编辑，任务是判断在一组“新闻栏目”中，哪些对于目标读者来说最有可能包含重要新闻的栏目,如果你觉得不是新闻栏目(分类),这个栏目的定义不能是专题事件(类似于某某会议,某某战争什么的,都应该排名在后面),最好应该是类似财经新闻这种,排名要靠后,如果目标分类域名和主站域名不一致,如news.cn和cnki.net,排名放到最后,比较好的栏目名类似于[财经][科技][国际][亚洲新闻]这种,但不能是[财经网]这样的,即名字就像是一个网站的子栏目,不好的栏目名类似于[中国政府网][公司官网][联系我们]这种,如果你认为这个栏目可能会指向别的网站(比如名字就叫(外交部,或者新浪网)),排序就放到后面。你的回应必须极端简洁，严格遵循格式。内容使用简体中文。',
            user: `主站域名: ${CONFIG.startUrl}\n**任务目标**: “${taskDescription}”\n\n**待评估的“栏目”标题列表**:\n${categoryTitleAndLinks.map((obj, i) => `${i + 1}. ${obj.title}||${obj.url}`).join('\n')}\n\n**你的指令**:\n根据任务目标，对列表中的栏目标题进行重要性排序。你的回应【只能】是栏目的【编号】，从最重要到最不重要排列，并用英文逗号 (,) 分隔。不要包含任何理由、解释或多余的文字。\n\n**格式示例**: 3,1,2,5,4\n\n**你的回应**:`,
        }),

        // 用于判断一个链接指向的是文章页还是栏目页
        classifyLinkType: (linkTitle, link) => ({
            system: '你是一个链接分类工具，任务是判断一个链接标题指向的是“文章页面”还是“栏目列表页面”。你的回应必须是单个词。内容使用简体中文。',
            user: `请判断以下链接标题更可能是一个具体的新闻“文章”（article）还是一个新闻“栏目”（category）。\n标题：“${linkTitle}\n链接:"${link}”\n\n你的回应只能是 "article" 或 "category"。\n\n回应:`,
        }),

        // (新聚类方案核心) 让模型直接找出事件簇，而不是关系对
        findSimilarPairs: (articles) => ({
            system: '你是一个顶级的、擅长语义理解的新闻事件分析引擎。你的任务是分析一个新闻标题列表，并将报道【同一个核心新闻事件】的标题归为一类。即使标题的措辞、角度或信息源不同，只要核心事件相同，就应该被关联起来。你的回应必须是纯粹的JSON。',
            user: `
**# 任务**
从下面的“文章列表”中，找出所有报道【同一个核心新闻事件】的标题，并将它们的ID组织成一个“事件簇”。

**# 核心事件判断标准**
- **实体一致**: 涉及同一个国家、同一家公司、同一位关键人物等。
- **事件性质一致**: 都是关于某次会议、某项政策发布、某场自然灾害、某个科技突破等。
- **忽略措辞和角度差异**: 例如，“A国与B国发生边境冲突” 和 “B国国防部谴责A国军队的挑衅行为” 应被视为同一事件。
以上三者必须完全满足,才能视为同一事件,如果主体不一致,比如[俄乌战争]和[巴以冲突]不能被归为一类.但是[俄乌战争中,俄罗斯袭击基辅]和[基辅被俄罗斯袭击],视为一类.

**# 文章列表**
${articles.map((art, i) => `ID_${i}: "${art.title}"`).join('\n')}

**# 你的指令**
1.  仔细阅读并理解每一个标题的核心事件。
2.  将所有报道同一事件的标题ID组织在一起，形成一个数组（事件簇）。
3.  你的回应【只能】是一个JSON数组，其每个元素是代表一个独立新闻事件的ID数组（该数组内至少包含两个ID）。
4.  如果所有标题都报道的是完全不同的事件，请返回一个空数组 \`[]\`。

**# 绝对规则**
- 你的目标是【识别事件】，而不是进行简单的文本匹配。
- 你的回应【必须且只能】是一个纯粹的JSON数组，不包含任何解释、注释或Markdown标记。

**# 格式示例** (假设ID 0, 5, 8是同一事件, ID 2, 4是另一事件):
[
  [0, 5, 8],
  [2, 4]
]

**# 你的回应**
`
        }),

        // 用于决赛圈，对入围的文章进行最终的重要性排序
        rankContenders: (articles, taskDescription) => ({
            system: '你是一位顶级的、拥有宏观视野,视角全面且客观的总编辑，任务是判断在一组新闻中，哪些对于目标读者最重要、最具有新闻价值。你的判断必须果断、精准，且严格遵循输出格式。内容使用简体中文。',
            user: `**任务目标**: “${taskDescription}”\n\n**待排名新闻列表**:\n${articles.map((a, i) => `${i + 1}. ${a.title}`).join('\n')}\n\n**你的指令**:\n请根据上述任务目标，对列表中的新闻进行重要性排序。你的回应【只能】是新闻的【编号】，从最重要到最不重要排列，并用英文逗号 (,) 分隔。不要包含任何理由、解释或多余的文字。\n\n**格式示例**: 3,1,2\n\n**你的回应**:`,
        }),

        // 用于对单篇文章或议题进行深度处理，生成标题、摘要、关键词等
        processArticleSingleCall: (articleContent, originalTitle, isCluster = false, latestDate = null) => ({
            system: '你需要先判断文章内容是否是近期的内容,如果不是,直接返回"false",布尔型,不要返回任何其它信息.如果是近期内容,那么你是一位顶尖的新闻分析师和内容创作者，擅长从海量信息中提炼价值、深度解读，并以专业且亲民的语言呈现。你的输出必须是一个纯粹、格式完美的JSON对象。',
            user: `
            当前日期: ${new Date().toISOString()}
            ${latestDate ? `发布时间: ${latestDate}` : null}
**分析材料**:
---
${originalTitle}
${articleContent}
---

**你的任务**:
根据以上提供的一篇或多篇相关新闻原文，执行下列所有指令，并生成一个【单一、完整、无任何多余内容】的JSON对象回复。你生成的内容要高度契合给你的文本,不要编造没有的内容.

**# JSON对象结构定义**
1.  \`"title"\`: (string) 生成一个全新的、高度精炼信息量丰富的中文标题。
2.  \`"conciseSummary"\`: (string) 用一句话（不超过60字）凝练出整个事件的核心内容。
3.  \`"keywords"\`: (string[]) 提取3-5个最关键的核心词，存为JSON字符串数组。
4.  \`"category"\`: (string) 从 ['国际', '国内', '财经', '科技', '社会', '观点', '其他'] 中选择一个最匹配的分类。
5.  \`"detailedSummary"\`: (string) 
    ${isCluster
                    ? `**[!! 已聚合多篇报道 !!]** 这是一组关于同一主题的相关报道，请执行以下特殊指令：
        a. **综合信息**: 不要只复述单篇文章，而是对比、整合所有信源的关键信息（时间、地点、人物、数据、各方观点等）。
        b. **提炼共识与差异**: 如果报道中有细节冲突或不同的侧重，可以简要提及。
        c. **形成统一叙事**: 最终产出一段连贯、流畅、结构清晰的深度综述（约300-900字），就像一篇独立的深度分析文章。语言风格要求专业且亲民，易于理解。
        d. **提供洞见**: 在事实陈述的基础上，可以加上一两句简短的背景分析或事件点评，提升摘要的深度。`
                    : `撰写一篇详尽、流畅、结构清晰的深度摘要（约200-800字）。如果原文信息丰富，字数可适度增加。摘要应包含事件的关键要素（时间、地点、人物、起因、经过、结果等），可使用Markdown换行符 \`\\n\` 和列表来增强可读性。`
                }

**# 绝对规则**
1.  **【规则1：纯净JSON】** 你的整个回复【必须且只能】是一个完整的JSON对象，从 \`{\` 开始，到 \`}\` 结束。
2.  **【规则2：无外部文本】** 严禁在JSON对象前后添加任何文本、注释、或Markdown代码块标记。

**请严格遵照以上所有规则，开始生成你的JSON对象：**
`
        }),

        // 用于生成每日简报开头的“总编导语”
        generateEditorIntro: (conciseSummariesText) => ({
            system: '你是一位视野宏大、洞察力敏锐、文笔老练的资深总编辑。你的任务是为今日的新闻简报撰写一段画龙点睛的开篇导语。',
            user: `# 角色与使命
你是一位兼具历史学家视野与未来学家前瞻性的资深总编辑，以冷静、客观、深入著称的顶级期刊（如《经济学人》、《大西洋月刊》）的灵魂人物。你的读者是寻求深度思考、不满足于信息碎片的精英群体。你的任务不再是简单的新闻开篇，而是为今日纷繁的世界，提供一个思想的锚点和认知罗盘。**你的声音是分析师的诊断，而非对话者的询问。你以清晰的论断呈现洞见，即便在探讨不确定性时，也保持着引导者的姿态，旨在揭示而非反问。**

# 任务
基于以下今日核心新闻的一句话摘要，撰写一篇约600-800字的“总编时刻”（Editor's Note）开篇导语。

# 写作要求
1.  **主题升华 (Thematic Sublimation)**: 绝对禁止罗列或复述新闻。你需要从看似孤立的事件中，精准地提炼、并“命名”当日最核心的时代脉动或结构性张力。例如，这背后是“确定性的消逝”、“技术伦理的边界叩问”还是“全球信任赤字的蔓延”？你需要为全篇定下思辨的基调。

2.  **跨域关联 (Cross-Domain Connection)**: 揭示事件之间隐藏的共振。一项科技政策的调整，如何与千里之外的社会情绪、一国的选举结果、甚至一种新的艺术流派产生微妙的化学反应？你要描绘出这张链接万物的、看不见的网。

3.  **纵深剖析 (In-Depth Analysis)**: **剖析**表象之下的“第一性原理”。是什么样的社会心理、经济基础或历史惯性，导致了眼前这一切的发生？要敢于触及那些更根本、更棘手、也更少被谈及的结构性问题。

4.  **议程设置 (Agenda Setting)**: 在分析的结尾，不应提供一个封闭的答案，**而应提出一个或一组具有高度概括性的核心议题或观察视角**。其价值在于，它为读者提供了一个认知透镜，能引导他们在阅读后续新闻时，带着你所建立的框架去独立洞察与判断，从而激发贯穿一整天的深度思考。**这并非提问，而是为复杂的现实指明最值得审视的方向。**

5.  **文笔质感 (Prose with Texture)**: 语言风格需兼具力量与优雅。多使用精妙的隐喻或历史类比来阐释复杂的观点。句式长短相宜，富有节奏感，开篇即引人入胜，结尾则余味悠长，值得反复品读。

6.  **纯净输出**: 你的回应【只能】包含导语本身，禁止任何额外文字、标题或问候语。

---[今日核心新闻摘要]---
${conciseSummariesText}
---

**你的导语**:
`
        }),
    }
};

export default CONFIG;